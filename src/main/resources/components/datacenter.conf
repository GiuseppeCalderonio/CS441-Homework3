datacenter {

    simple {
        # allocation policy, it can be Simple, RoundRobin, BestFit, FirstFit
        allocationPolicy = "Simple"
        # cost in dollars per each second of activity
        costPerSecond = 0.01
        # cost in dollars per each MB used for ram
        costPerMem = 0.01
        # cost in dollars per each MB used for rom
        costPerStorage = 0.0001
        # cost in dollars per each MB/s of bandwidth used
        costPerBw = 0.01
        # scheduling interval in seconds [Double]
        schedulingInterval = 10
        # migration policy type, it can be RandomSelection, MinimumUtilization, MinimumMigrationTime [String]
        migrationPolicy = "RandomSelection"
        # maximum utilization in percentage between 0 and 1 after which the migration triggers [Double]
        maximumUtilization = 0.5

        # 3 hosts
        hosts = [
            {
                #type of the host, it can be simple, medium or large [String]
                type = "simple"
                # virtual machine scehuler, it can be TimeShared or SpaceShared [String]
                vmScheduler = "SpaceShared"
                # number of hosts to instantiate of this type
                count = 2
            }
            ,
            {
                #type of the host, it can be simple, medium or large [String]
                type = "medium"
                # virtual machine scehuler, it can be TimeShared or SpaceShared [String]
                vmScheduler = "TimeShared"
                # number of hosts to instantiate of this type
                count = 1
            }
        ]

        vms = [

            {
                # type of VM, it can be simple, medoum or large [String]
                type = "simple"
                # number of VMs of this type to instntiate [Long]
                count = 2
            }
        ]
    }

    medium {
        # allocation policy, it can be Simple, RoundRobin, BestFit, FirstFit
        allocationPolicy = "BestFit"
        # cost in dollars per each second of activity
        costPerSecond = 0.01
        # cost in dollars per each MB used for ram
        costPerMem = 0.01
        # cost in dollars per each MB used for rom
        costPerStorage = 0.0001
        # cost in dollars per each MB/s of bandwidth used
        costPerBw = 0.01
        # scheduling interval in seconds
        schedulingInterval = 10
        # migration policy type, it can be RandomSelection, MinimumUtilization, MinimumMigrationTime [String]
        migrationPolicy = "MinimumMigrationTime"
        # maximum utilization in percentage between 0 and 1 after which the migration triggers [Double]
        maximumUtilization = 0.5

        # 7 hosts
        hosts = [
            {
                #type of the host, it can be simple, medium or large [String]
                type = "simple"
                # virtual machine scehuler, it can be TimeShared or SpaceShared [String]
                vmScheduler = "SpaceShared"
                # number of hosts to instantiate of this type
                count = 2
            }
            ,
            {
                #type of the host, it can be simple, medium or large [String]
                type = "medium"
                # virtual machine scehuler, it can be TimeShared or SpaceShared [String]
                vmScheduler = "TimeShared"
                # number of hosts to instantiate of this type
                count = 2
            }
            ,
            {
                #type of the host, it can be simple, medium or large [String]
                type = "medium"
                # virtual machine scehuler, it can be TimeShared or SpaceShared [String]
                vmScheduler = "SpaceShared"
                # number of hosts to instantiate of this type
                count = 3
            }
        ]

        vms = [
            {
                # type of VM, it can be simple, medoum or large [String]
                type = "simple"
                # number of VMs of this type to instntiate [Long]
                count = 2
            }
            ,
            {
                # type of VM, it can be simple, medoum or large [String]
                type = "medium"
                # number of VMs of this type to instntiate [Long]
                count = 4
            }
        ]

    }

    large {
        # allocation policy, it can be Simple, RoundRobin, BestFit, FirstFit
        allocationPolicy = "RoundRobin"
        # cost in dollars per each second of activity
        costPerSecond = 0.01
        # cost in dollars per each MB used for ram
        costPerMem = 0.01
        # cost in dollars per each MB used for rom
        costPerStorage = 0.0001
        # cost in dollars per each MB/s of bandwidth used
        costPerBw = 0.01
        # scheduling interval in seconds
        schedulingInterval = 10
        # migration policy type, it can be RandomSelection, MinimumUtilization, MinimumMigrationTime [String]
        migrationPolicy = "MinimumUtilization"
        # maximum utilization in percentage between 0 and 1 after which the migration triggers [Double]
        maximumUtilization = 0.5

        # 13 hosts
        hosts = [
            {
                #type of the host, it can be simple, medium or large [String]
                type = "medium"
                # virtual machine scehuler, it can be TimeShared or SpaceShared [String]
                vmScheduler = "TimeShared"
                # number of hosts to instantiate of this type
                count = 3
            }
            ,
            {
                #type of the host, it can be simple, medium or large [String]
                type = "medium"
                # virtual machine scehuler, it can be TimeShared or SpaceShared [String]
                vmScheduler = "SpaceShared"
                # number of hosts to instantiate of this type
                count = 3
            }
            ,
            {
                #type of the host, it can be simple, medium or large [String]
                type = "large"
                # virtual machine scehuler, it can be TimeShared or SpaceShared [String]
                vmScheduler = "SpaceShared"
                # number of hosts to instantiate of this type
                count = 4
            }
            ,
            {
                #type of the host, it can be simple, medium or large [String]
                type = "large"
                # virtual machine scehuler, it can be TimeShared or SpaceShared [String]
                vmScheduler = "TimeShared"
                # number of hosts to instantiate of this type
                count = 3
            }
        ]
        vms = [
            {
                # type of VM, it can be simple, medoum or large [String]
                type = "simple"
                # number of VMs of this type to instntiate [Long]
                count = 1
            }
            ,
            {
                # type of VM, it can be simple, medoum or large [String]
                type = "medium"
                # number of VMs of this type to instntiate [Long]
                count = 2
            }
            ,
            {
                # type of VM, it can be simple, medoum or large [String]
                type = "large"
                # number of VMs of this type to instntiate [Long]
                count = 6
            }
        ]
    }
}